CREATE SCHEMA IF NOT EXISTS Music_band;


SET search_path = Music_band, public;


CREATE TABLE IF NOT EXISTS Music_band.band (
  id_band int NOT NULL,
  name varchar(100) NOT NULL,
  date_of_create date NOT NULL,
  date_of_decay date,
  country varchar(45) NOT NULL,
  style varchar(100) NULL,
  PRIMARY KEY (id_band))
;


CREATE TABLE IF NOT EXISTS Music_band.artist (
  id_artist int NOT NULL,
  first_name varchar(45) NOT NULL,
  last_name varchar(45) NOT NULL,
  middle_name varchar(45) NULL,
  date_of_birth date NOT NULL,
  date_of_death date,
  country varchar(45),
  place_of_birth varchar(45),
  PRIMARY KEY (id_artist))
;


CREATE TABLE IF NOT EXISTS Music_band.artist_has_band (
  position_in_band varchar(45) NOT NULL,
  joined date NOT NULL,
  depart date,
  id_artist int REFERENCES Music_band.artist(id_artist) NOT NULL,
  id_band int REFERENCES Music_band.band(id_band) NOT NULL,
  PRIMARY KEY (id_artist, joined))
;


CREATE TABLE IF NOT EXISTS Music_band.album (
  id_album int NOT NULL,
  name varchar(100) NOT NULL,
  date_of_release date NOT NULL,
  id_band int REFERENCES Music_band.band(id_band) NOT NULL,
  PRIMARY KEY (id_album))
;


CREATE TABLE IF NOT EXISTS Music_band.song (
  name varchar(45) NOT NULL,
  id_song int NOT NULL,
  id_author int REFERENCES Music_band.artist(id_artist) NOT NULL,
  id_album int REFERENCES Music_band.album(id_album),
  PRIMARY KEY (id_song))
;


CREATE TABLE IF NOT EXISTS Music_band.participants_of_the_album (
  id_album int REFERENCES Music_band.album(id_album) NOT NULL,
  id_artist int REFERENCES Music_band.artist(id_artist) NOT NULL,
  PRIMARY KEY (id_album, id_artist))
;




insert into band VALUES (1, 'Metallica', '1981-10-28', null, 'USA', 'metal');
insert into band VALUES (2, 'Megadeath', '1983-04-11', null, 'USA', 'metal');
insert into band VALUES (3, 'NIRVANA', '1987-01-01', '1994-04-08', 'USA', 'grunge');
insert into band VALUES (4, 'Foo Fighters', '1994-10-01', null, 'USA', 'alternative');
insert into band VALUES (5, 'Thirty Seconds to Mars', '1998-01-01', null, 'USA', 'alternative');
insert into band VALUES (6, 'Zakk Wylde', '1996-06-18', null, 'USA', 'southern rock');
insert into band VALUES (7, 'Barns Courtney', '2015-01-01', null, 'England', 'blues rock');
insert into band VALUES (8, 'Muse', '1994-01-01', null, 'England', 'alternative');



insert into artist VALUES (1, 'James', 'Hetfield', 'Alan', '1963-08-03', null, 'USA', 'California');
insert into artist VALUES (2, 'Kirk', 'Hammett', 'Lee', '1962-11-18', null, 'USA', 'California');
insert into artist VALUES (3, 'Lars', 'Ulrich', null, '1963-12-26', null, 'Denmark', 'Gentofte');
insert into artist VALUES (4, 'Clifford', 'Burton', 'Lee', '1962-02-10', '1986-09-27', 'USA', 'California');
insert into artist VALUES (5, 'David', 'Mustaine', 'Scott', '1961-09-13', null, 'USA', 'California');
insert into artist VALUES (6, 'Robert', 'Trujillo', null, '1964-10-23', null, 'USA', 'California');
insert into artist VALUES (7, 'Jason', 'Nested', 'Curtis', '1963-03-04', null, 'USA', 'Michigan');
insert into artist VALUES (8, 'David', 'Ellefson', 'Warren', '1964-11-12', null, 'USA', 'Minnesota');
insert into artist VALUES (9, 'Kurt', 'Cobain', 'Donald', '1967-02-20', '1994-04-05', 'USA', 'Washington');
insert into artist VALUES (10, 'Krist', 'Novoselic', 'Anthony', '1965-05-16', null, 'USA', 'California');
insert into artist VALUES (11, 'David', 'Grohl', 'Eric', '1969-01-13', null, 'USA', 'Ohio');
insert into artist VALUES (12, 'Nathan', 'Mendel', 'Gregor', '1968-01-2', null, 'USA', 'Washington');
insert into artist VALUES (13, 'Oliver', 'Hawkins', 'Taylor', '1972-02-17', null, 'USA', 'Texas');
insert into artist VALUES (14, 'Christopher', 'Shiflett', 'Aurbey', '1971-05-06', null, 'USA', 'California');
insert into artist VALUES (15, 'Georg', 'Ruthenberg', 'Albert', '1959-08-05', null, 'USA', 'California');
insert into artist VALUES (16, 'Rami', 'Jaffee', null, '1969-03-11', null, 'USA', 'California');
insert into artist VALUES (17, 'Jared', 'Leto', 'Joseph', '1971-12-16', null, 'USA', 'Louisiana');
insert into artist VALUES (18, 'Shannon', 'Leto', null, '1970-03-09', null, 'USA', 'Louisiana');
insert into artist VALUES (19, 'Solon', 'Wixler', 'Ben', '1977-01-04', null, 'USA', 'California');
insert into artist VALUES (20, 'Tomislav', 'Milicevic', null, '1979-09-03', null, 'Yugoslavia', 'Sarajevo');
insert into artist VALUES (21, 'Zachary', 'Wylde', 'Phillip', '1967-02-14', null, 'USA', 'New Jersey');
insert into artist VALUES (22, 'Barnaby', 'Courtney', 'George', '1990-11-17', null, 'England', 'Aylesbury');
insert into artist VALUES (23, 'Matthew', 'Bellamy', 'James', '1978-06-09', null, 'England', 'Cambridge');
insert into artist VALUES (24, 'Dominic', 'Howard', 'James', '1977-12-07', null, 'England', 'Stockport');
insert into artist VALUES (25, 'Christopher', 'Wolstenholme', 'Tony', '1978-12-02', null, 'England', 'South Yourkshire');
insert into artist VALUES (26, 'Morgan', 'Nicholls', 'Daniel', '1971-03-18', null, 'England', null);


insert into artist_has_band values ('vocal', '1981-10-28', null, 1, 1);
insert into artist_has_band values ('drum', '1981-10-28', null, 3, 1);
insert into artist_has_band values ('guitar', '1982-01-01', '1983-04-11', 5, 1);
insert into artist_has_band values ('guitar', '1983-04-11', null, 2, 1);
insert into artist_has_band values ('bass', '1982-01-01', '1986-09-27', 4, 1);
insert into artist_has_band values ('bass', '1986-09-27', '2000-11-30', 7, 1);
insert into artist_has_band values ('bass', '2003-02-24', null, 6, 1);
insert into artist_has_band values ('vocal', '1983-04-11', null, 5, 2);
insert into artist_has_band values ('bass', '1983-04-11', '2002-01-01', 8, 2);
insert into artist_has_band values ('vocal', '1987-01-01', '1994-04-05', 9, 3);
insert into artist_has_band values ('bass', '1983-04-11', '1994-04-08', 10, 3);
insert into artist_has_band values ('drum', '1990-09-01', '1994-04-08', 11, 3);
insert into artist_has_band values ('vocal', '1994-10-01', null, 11, 4);
insert into artist_has_band values ('bass', '1995-01-01', null, 12, 4);
insert into artist_has_band values ('drum', '1996-03-01', null, 13, 4);
insert into artist_has_band values ('guitar', '2000-01-01', null, 14, 4);
insert into artist_has_band values ('guitar', '1994-10-01', '1997-06-01', 15, 4);
insert into artist_has_band values ('guitar', '2010-01-01', null, 15, 4);
insert into artist_has_band values ('piano', '2017-01-01', null, 16, 4);
insert into artist_has_band values ('vocal', '1998-01-01', null, 17, 5);
insert into artist_has_band values ('drum', '1998-01-01', null, 18, 5);
insert into artist_has_band values ('guitar', '2001-01-01', '2003-01-01', 19, 5);
insert into artist_has_band values ('guitar', '2003-01-01', '2018-06-01', 20, 5);
insert into artist_has_band values ('vocal', '1996-06-18', null, 21, 6);
insert into artist_has_band values ('vocal', '2015-01-01', null, 22, 7);
insert into artist_has_band values ('vocal', '1994-01-01', null, 23, 8);
insert into artist_has_band values ('drum', '1994-01-01', null, 24, 8);
insert into artist_has_band values ('bass', '1994-01-01', null, 25, 8);
insert into artist_has_band values ('piano', '2004-08-01', '2005-01-01', 26, 8);
insert into artist_has_band values ('piano', '2006-01-01', null, 26, 8);



insert into album values (1, 'Kill `Em ALl', '1983-07-25', 1);
insert into album values (2, '...And Justice for All', '1988-08-25', 1);
insert into album values (3, 'Ride the Lightning', '1984-07-27', 1);
insert into album values (4, 'Master of Puppets', '1986-03-03', 1);
insert into album values (5, 'Metallica', '1991-08-12', 1);
insert into album values (6, 'Killing Is My Business... and Business Is Good!', '1985-06-12', 2);
insert into album values (7, 'Nevermind', '1991-09-24', 3);
insert into album values (8, 'In Utero', '1993-09-21', 3);
insert into album values (9, 'Concrete and Gold', '2017-09-15', 4);
insert into album values (10, 'Foo Fighters', '1995-07-04', 4);
insert into album values (11, '30 Seconds to Mars', '2002-08-27', 5);
insert into album values (12, 'This is War', '2009-12-08', 5);
insert into album values (13, 'America', '2018-04-06', 5);
insert into album values (14, 'Book of Shadows', '1996-06-18', 6);
insert into album values (15, 'Book of Shadows II', '2016-04-08', 6);
insert into album values (16, 'The Attractions of Youth', '2017-09-29', 7);
insert into album values (17, 'Showbiz', '1999-09-07', 8);
insert into album values (18, 'Black Holes and Revelations', '2006-07-03', 8);


insert into song values ('One', 1, 1, 2);
insert into song values ('Hit the Lights', 2, 1, 1);
insert into song values ('Fade to Black', 3, 1, 3);
insert into song values ('Master of Puppets', 4, 1, 4);
insert into song values ('The Unforgiven', 5, 1, 5);
insert into song values ('Last Rites/Loved to Deth', 6, 5, 6);
insert into song values ('Polly', 7, 9, 7);
insert into song values ('Smells Like Teen Spirit', 8, 9, 7);
insert into song values ('Rape Me', 9, 9, 8);
insert into song values ('Heart-Shaped Box', 10, 9, 8);
insert into song values ('This Is a Call', 11, 11, 10);
insert into song values ('Run', 12, 11, 9);
insert into song values ('Edge of th Earth', 13, 17, 11);
insert into song values ('This is War', 14, 17, 12);
insert into song values ('Hurricane', 15, 17, 12);
insert into song values ('Walk on Water', 16, 17, 13);
insert into song values ('Sold My Soul', 17, 21, 14);
insert into song values ('Sleeping Dogs', 18, 21, 15);
insert into song values ('Never Let Your Down', 19, 22, 16);
insert into song values ('Fire', 20, 22, 16);
insert into song values ('Uno', 21, 23, 17);
insert into song values ('Supermassive Black Hole', 22, 23, 18);
insert into song values ('Starlight', 23, 23, 18);
insert into song values ('The Four Horsemen', 24, 1, 1);
insert into song values ('Motorbreath', 25, 1, 1);
insert into song values ('Jump in the Fire', 26, 1, 1);
insert into song values ('(Anesthesia)-Pulling Teeth', 27, 4, 1);
insert into song values ('Whiplash', 28, 1, 1);
insert into song values ('Phantom Lord', 29, 1, 1);
insert into song values ('No Remorse', 30, 1, 1);
insert into song values ('Seek & Destroy', 31, 1, 1);
insert into song values ('Metal Militia', 32, 1, 1);
insert into song values ('Fight Fire with Fire', 33, 1, 3);
insert into song values ('Ride the Lightning', 34, 1, 3);
insert into song values ('For Whom the Bell Tolls', 35, 3, 3);
insert into song values ('Trapped Under Ice', 36, 1, 3);
insert into song values ('Escape', 37, 1, 3);
insert into song values ('Creeping Death', 38, 1, 3);
insert into song values ('The Call of Ktulu', 39, 1, 3);
insert into song values ('Battery', 40, 1, 4);
insert into song values ('The Thing That Should Not Be', 41, 1, 4);
insert into song values ('Welcome Home(Sanitarium)', 42, 1, 4);
insert into song values ('Disposable Heroes', 43, 1, 4);
insert into song values ('Leper Messiah', 44, 1, 4);
insert into song values ('Orion', 45, 3, 4);
insert into song values ('Damage, Inc.', 46, 1, 4);
insert into song values ('Enter Sandman', 47, 1, 5);
insert into song values ('Sad but True', 48, 1, 5);
insert into song values ('Holier Than Thou', 49, 1, 5);
insert into song values ('Wherever I May Roam', 50, 1, 5);
insert into song values ('Don`t Tread on Me', 51, 1, 5);
insert into song values ('Nothing Else Matters', 52, 1, 5);
insert into song values ('Blackened', 53, 1, 2);
insert into song values ('...And Justice for All', 54, 1, 2);
insert into song values ('To Live Is to Die', 55, 1, 2);
insert into song values ('The Skull Beneath the Skin', 56, 5, 6);
insert into song values ('These Boots', 57, 5, 6);
insert into song values ('Rattlehead', 58, 5, 6);
insert into song values ('Mechanix', 59, 5, 6);
insert into song values ('Come as You Are', 60, 9, 7);
insert into song values ('Drain You', 61, 9, 7);
insert into song values ('Lithium', 62, 9, 7);
insert into song values ('Breed', 63, 9, 7);
insert into song values ('All Apologies', 64, 9, 8);
insert into song values ('Dumb', 65, 9, 8);
insert into song values ('Pennyroyal Tea', 66, 9, 8);







insert into participants_of_the_album values (17, 23);
insert into participants_of_the_album values (17, 24);
insert into participants_of_the_album values (17, 25);

insert into participants_of_the_album values (18, 23);
insert into participants_of_the_album values (18, 24);
insert into participants_of_the_album values (18, 25);

insert into participants_of_the_album values (16, 22);

insert into participants_of_the_album values (14, 21);

insert into participants_of_the_album values (15, 21);

insert into participants_of_the_album values (10, 11);

insert into participants_of_the_album values (9, 11);
insert into participants_of_the_album values (9, 14);
insert into participants_of_the_album values (9, 15);
insert into participants_of_the_album values (9, 12);
insert into participants_of_the_album values (9, 13);
insert into participants_of_the_album values (9, 16);

insert into participants_of_the_album values (12, 17);
insert into participants_of_the_album values (12, 18);
insert into participants_of_the_album values (12, 20);

insert into participants_of_the_album values (13, 17);
insert into participants_of_the_album values (13, 18);


insert into participants_of_the_album values (11, 17);
insert into participants_of_the_album values (11, 18);
insert into participants_of_the_album values (11, 19);


insert into participants_of_the_album values (7, 9);
insert into participants_of_the_album values (7, 10);
insert into participants_of_the_album values (7, 11);

insert into participants_of_the_album values (8, 9);
insert into participants_of_the_album values (8, 10);
insert into participants_of_the_album values (8, 11);


insert into participants_of_the_album values (3, 1);
insert into participants_of_the_album values (3, 2);
insert into participants_of_the_album values (3, 4);
insert into participants_of_the_album values (3, 3);


insert into participants_of_the_album values (6, 5);
insert into participants_of_the_album values (6, 8);


insert into participants_of_the_album values (4, 1);
insert into participants_of_the_album values (4, 2);
insert into participants_of_the_album values (4, 4);
insert into participants_of_the_album values (4, 3);

insert into participants_of_the_album values (5, 1);
insert into participants_of_the_album values (5, 2);
insert into participants_of_the_album values (5, 7);
insert into participants_of_the_album values (5, 3);

insert into participants_of_the_album values (1, 1);
insert into participants_of_the_album values (1, 2);
insert into participants_of_the_album values (1, 4);
insert into participants_of_the_album values (1, 3);

insert into participants_of_the_album values (2, 1);
insert into participants_of_the_album values (2, 2);
insert into participants_of_the_album values (2, 7);
insert into participants_of_the_album values (2, 3);





select band.name, album.name
  from album inner join band on album.id_band = band.id_band
;

select artist.first_name, artist.last_name, song.name
  from artist inner join song on artist.id_artist = song.id_author
 order by artist.last_name;

select band.name, count(*)
  from album inner join band on album.id_band = band.id_band
 group by band.id_band
 order by band.name
;

select album.name, count(*)
  from album inner join song on album.id_album = song.id_album
 group by album.name
having  count(*) > 3;


    select artist.first_name, artist.middle_name, artist.last_name,
           artist.date_of_birth, artist.date_of_death,
           replace(text(age(artist.date_of_death, artist.date_of_birth)), '0 hours 0 mins 0.00 secs', '') as lived
      from artist
     where date_of_death is not null;

create view died as
    select artist.first_name, artist.middle_name, artist.last_name,
           artist.date_of_birth, artist.date_of_death,
           replace(text(age(artist.date_of_death, artist.date_of_birth)), '0 hours 0 mins 0.00 secs', '') as lived
      from artist
     where date_of_death is not null;

select * from died;


create view last_song as
    select song.name as song, album.name as album, first_name, last_name
      from (song inner join album
        on song.id_album = album.id_album) inner join artist
        on song.id_author = artist.id_artist
     where album.date_of_release > '2015-01-01';

select * from last_song;





create function information(id int)
returns table(f_name varchar(50), l_name varchar(50), last_band varchar(50), join date, departed date) as $$
  begin
    return query (select first_name, last_name, name, joined, depart
      from artist inner join artist_has_band
        on artist.id_artist = artist_has_band.id_artist inner join band
        on artist_has_band.id_band = band.id_band
     where artist.id_artist = id);
  end;
    $$ language plpgsql;

select * from information(15);


create function more_then(count_song int)
returns table(f_name varchar(50), l_name varchar(50)) as $$
    begin
        return query (select first_name, last_name
                  from artist inner join song
                    on artist.id_artist = song.id_author
                 group by first_name, last_name
                having count(id_song) > count_song);
    end;
    $$ language plpgsql;

select * from more_then(5);



create function replace()
returns trigger as $$
    begin
        if new.joined <= (select max(joined)
                   from artist_has_band
                  where id_artist = new.id_artist) then
            raise notice 'you can`t insert date that less last joined date';
            return null;
        end if;
        update artist_has_band
           set depart = new.joined
         where artist_has_band.id_artist = new.id_artist
           and joined = (select max(joined)
                   from artist_has_band
                  where id_artist = new.id_artist);
    return new;
    end;
    $$ language plpgsql;


create trigger replace_old_date before insert
    on artist_has_band
    for each row
    execute procedure replace();

insert into artist_has_band values ('vocal', '2000-01-01', null, 11, 3);
insert into artist_has_band values ('vocal', '1995-01-01', null, 11, 3);




create role low_level with login password 'password'
grant select on all tables in schema Music_band to low_level

create role editor with login password 'hard_password'
grant select, update, insert on all tables in schema Music_band to editor
